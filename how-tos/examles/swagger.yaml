swagger: '2.0'
info:
  version: 1.0.0
  title: Dynamic Groups API
schemes:
  - http
host: localhost:9000
basePath: /dg
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/partners/{partnerId}/dynamic-groups:
    post:
      description: Create a new group
      parameters:
        - $ref: '#/parameters/PartnerId'
        - $ref: '#/parameters/GroupNameAndQuery'
        - $ref: '#/parameters/AcceptLanguage'
      responses:
        201:
          description: Group successfully created
          schema:
            $ref: '#/definitions/DynamicGroup'
        400:
          description: Can not decode input data
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Can not create dynamic group
          schema:
            $ref: '#/definitions/Error'

    get:
      description: Returns a list of all dynamic groups
      parameters:
              - $ref: '#/parameters/PartnerId'
              - $ref: '#/parameters/AcceptLanguage'
      responses:
        200:
          description: Successfully returned the list of groups
          schema:
            type: array
            items:
              $ref: '#/definitions/DynamicGroup'
        500:
          description: Can not get all dynamic groups
          schema:
            $ref: '#/definitions/Error'

  /v1/partners/{partnerId}/dynamic-groups/{id}:
    put:
      description: Update the Dynamic Group with specified ID
      parameters:
        - $ref: '#/parameters/PartnerId'
        - $ref: '#/parameters/Id'
        - $ref: '#/parameters/GroupNameAndQuery'
        - $ref: '#/parameters/AcceptLanguage'
      responses:
        200:
          description: Group successfully updated
          schema:
            $ref: '#/definitions/DynamicGroup'
        400:
          description: Can not decode input data
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Dynamic Group (UUID=%s) not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error while update data
          schema:
            $ref: '#/definitions/Error'

    get:
      description: Returns dynamic group with the specified id
      parameters:
        - $ref: '#/parameters/PartnerId'
        - $ref: '#/parameters/Id'
        - $ref: '#/parameters/AcceptLanguage'
      responses:
        200:
          description: Successfully returned the group with specified id
          schema:
            $ref: '#/definitions/DynamicGroup'
        404:
          description: Dynamic Group (UUID=%s) not found
          schema:
            $ref: '#/definitions/Error'

    delete:
      description: Delete the group with specified id
      parameters:
        - $ref: '#/parameters/PartnerId'
        - $ref: '#/parameters/Id'
        - $ref: '#/parameters/AcceptLanguage'
      responses:
        204:
          description: Group successfully deleted
        404:
          description: Dynamic Group (UUID=%s) not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error while deleting data
          schema:
            $ref: '#/definitions/Error'

  /v1/partners/{partnerId}/dynamic-groups/managed-endpoints/set:
    get:
      description: Returns a set of managed endpoints satisfied to logical expression with Dynamic Group IDs
      parameters:
      - $ref: '#/parameters/PartnerId'
      - $ref: '#/parameters/numberOfRows'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/clientIDs'
      - $ref: '#/parameters/siteIDs'
      - $ref: '#/parameters/AcceptLanguage'
      - in: query
        name: expression
        type: string
        required: true
        description: logical expresion represented a condition to select desired managed endpoints
      responses:
        200:
          description: Successfully returned set of managed endpoints
          schema:
            type: array
            items:
              $ref: '#/definitions/ManagedEndpoint'
        400:
          description: Can not decode input data
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error while reading data
          schema:
            $ref: '#/definitions/Error'

  /v1/partners/{partnerId}/dynamic-groups/{id}/managed-endpoints:
    get:
      description: Returns the list of managed endpoints by query from specified by id group
      parameters:
      - $ref: '#/parameters/PartnerId'
      - $ref: '#/parameters/Id'
      - $ref: '#/parameters/numberOfRows'
      - $ref: '#/parameters/startIndex'
      - $ref: '#/parameters/clientIDs'
      - $ref: '#/parameters/siteIDs'
      - $ref: '#/parameters/AcceptLanguage'
      responses:
        200:
          description: Successfully returned the list of managed endpoints by query from specified by id group
          schema:
            type: array
            items:
              $ref: '#/definitions/ManagedEndpoint'
        404:
          description: Dynamic Group (UUID=%s) not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error while reading data
          schema:
            $ref: '#/definitions/Error'

  /v1/partners/{partnerId}/managed-endpoints/count:
      post:
        description: Get a number of devices according to query
        parameters:
          - $ref: '#/parameters/PartnerId'
          - $ref: '#/parameters/GroupQuery'
          - $ref: '#/parameters/AcceptLanguage'
        responses:
          200:
            description: Count of devices on success
            schema:
              $ref: '#/definitions/DeviceCount'
          400:
            description: Can not decode input data
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Can not get count of devices
            schema:
              $ref: '#/definitions/Error'

  /version:
    get:
      description:
        returns version of application running
      responses:
        200:
          description: Succesfully returned version object
          schema:
            $ref: '#/definitions/Version'

  /health:
    get:
      description:
        returns result of health call
      responses:
        200:
          description: Succesfully returns result of health call
          schema:
            $ref: '#/definitions/Health'

  /statistics:
    get:
      description: Returns statistic for worked messages from kafka to elasticsearch
      responses:
        200:
          description: Succesfully returned statistics object
          schema:
            $ref: '#/definitions/Statistics'

definitions:
  DynamicGroup:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      query:
        type: string
      createdAt:
        type: string
        format: dateTime
      createdBy:
        type: string
      updatedAt:
        type: string
        format: dateTime
      updatedBy:
        type: string
      client:
        type: string
        format: uuid
      partner:
        type: string
      site:
        type: string

  ManagedEndpoint:
    type: object
    properties:
      id:
        type: string
        format: uuid
      client:
        type: string
        format: uuid
      partner:
        type: string
      site:
        type: string

  DeviceCount:
    type: object
    properties:
      count:
        type: integer

  Error:
    type: object
    required:
      - message
    properties:
      message:
        type: string
      id:
        type: string

  Statistics:
    type: object
    required:
      - total-elasticsearch
      - total-kafka
      - current-kafka
      - current-elasticsearch
    properties:
      total-elasticsearch:
        type: integer
      total-kafka:
        type: integer
      current-kafka:
        type: integer
      current-elasticsearch:
        type: integer

  OutboundConnectionStatus:
    type: object
    required:
    - name
    - timeStampUTC
    - type
    - connectionType
    - connectionURLs
    - connectionStatus
    properties:
      name:
        type: string
      timeStampUTC:
        type: string
        format: dateTime
      type:
        type: string
      connectionType:
        type: string
      connectionURLs:
        type: array
        items:
          type: string
      connectionStatus:
        type: string
        enum:
        - Active
        - Unavailable
        - Connecting
        - Failing
        - Degraded

  Health:
    type: object
    required:
    - timeStampUTC
    - serviceName
    - serviceProvider
    - serviceVersion
    - name
    - type
    - status
    - lastStartTimeUTC
    - networkInterfaces
    - outboundConnectionStatus
    properties:
      timeStampUTC:
        type: string
        format: dateTime
      serviceName:
        type: string
      serviceProvider:
        type: string
      serviceVersion:
        type: string
      name:
        type: string
      type:
        type: string
      status:
        type: string
        enum:
        - Starting
        - Running
        - Stopping
        - Inactive
        - Degraded
        - Failing
      lastStartTimeUTC:
        type: string
        format: dateTime
      networkInterfaces:
        type: array
        items:
          type: string
      outboundConnectionStatus:
        type: array
        items:
          $ref: '#/definitions/OutboundConnectionStatus'

  Version:
    type: object
    required:
    - timeStampUTC
    - serviceName
    - serviceProvider
    - serviceVersion
    - name
    - type
    - buildCommitSHA
    - repository
    - supportedAPIVersions
    - buildNumber
    properties:
      timeStampUTC:
        type: string
        format: dateTime
      serviceName:
        type: string
      serviceProvider:
        type: string
      serviceVersion:
        type: string
      name:
        type: string
      type:
        type: string
      buildCommitSHA:
        type: string
      repository:
        type: string
      supportedAPIVersions:
        type: array
        items:
          type: string
      buildNumber:
        type: string
  
  Filter:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      value:
        type: array
        items:
          type: string

parameters:
  Id:
    name: id
    in: path
    type: string
    format: uuid
    required: true
    description: identificator for dynamic group

  PartnerId:
      name: partnerId
      in: path
      type: string
      required: true
      description: identificator for partner

  GroupNameAndQuery:
    name: group
    in: body
    description: Name and Definition for the Dynamic Group
    schema:
      type: object
      properties:
        name:
          type: string
        query:
            type: array
            items:
              $ref: '#/definitions/Filter'


  GroupQuery:
    name: group
    in: body
    description: Definition for the Dynamic Group without Name
    schema:
      type: object
      properties:
        query:
          type: object
          properties:
            os:
              type: array
              items:
                type: string
            site:
              type: array
              items:
                type: string
            installedSoftware:
              type: array
              items:
                type: string
            machineName:
              type: string
            machineFriendlyName:
              type: string

  AcceptLanguage:
      name: Accept-Language
      in: header
      description: language header
      required: false
      type: string

  startIndex:
    name: startIndex
    in: query
    description: The number of items to skip before starting to collect the result set.
    type: number
    format: integer
    required: false
    default: 0

  numberOfRows:
    name: numberOfRows
    in: query
    description: The numbers of items to return.
    type: number
    format: integer
    required: false
    default: 100
    maximum: 1000

  clientIDs:
    name: clientIDs
    in: query
    description: List of client id's, separated by comma
    type: array
    items:
      type: string
    required: false

  siteIDs:
    name: siteIDs
    in: query
    description: List of site ids, separated by comma
    type: array
    items:
      type: string
    required: false
    