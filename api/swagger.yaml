# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: GoDev elementary service API
  description: This is an API that fully corresponds with features states in the swagger specification 2.0
  version: "1.0.0"
# the domain of the service
host: 9090.api
# array of all schemes that your API supports
schemes:
  - https
  - http
# will be prefixed to all paths
basePath: /9090
produces:
  - application/json
paths:
  /sequence:
    get:
      summary: Everything about natural digits sequences
      description: |
        This endpoint returns the sequence of natural digits, each digit in the obtained
        sequence should not be less than this number.
      parameters:
        - name: inputLenght
          in: query
          description: The lenght of the prospective sequence of digits
          required: true
          type: number
        - name: inputMinSquare
          in: query
          description: Each digit in the obtained sequence should not be less than this number
          required: true
          type: number
      tags:
        - Sequence
      responses:
        200:
          description: a sequence of digits, separated by commas
          schema:
            type: string
            items:
              $ref: '#/definitions/sequence'
        default:
          description: Unexpected error
  /palindrome:
    get:
      summary: Everything about palindromes
      description: |
        This endpoint returns all palindromes found in the initial string.
      parameters:
        - name: stringToExplore
          in: query
          description: Initial string with potential palindrome
          required: true
          type: string
      tags:
        - Palindromes
      responses:
        200:
          description: The palindromes and subpalindromes found within the string
          schema:
            type: string
            items:
              $ref: '#/definitions/palindrome'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /Fibonacci:
    get:
      summary: Fibonacci Sequence
      description: Builds a sequence of Fibonacci number
      parameters:
        - name: numberToProceed
          in: query
          description: initial data (index)
          required: true
          type: number
      tags:
        - Fibonacci
      responses:
        200:
          description: Returns the slice of Fibonacci numbers depending on the initial data
          schema:
            type: array
            items:
              $ref: '#/definitions/Fibonacci'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /LuckyTickets:
    get:
      summary: Lucky Tickets
      description: Checks the quantity of lucky tickets found unsing two most widespread methods of calculation (works for six digit numbers)
      parameters:
        - name: inputStruct with mix and max fields
          in: query
          description: minimum and maximum of the diapason
          required: true
          type: structure
      tags:
        - Lucky Tickets
      responses:
        200:
          description: Return the Winner structure containing the information about the method of calculation which won and the quantity of lucky tickets found using each method
          schema:
            type: structure
            items:
              $ref: '#/definitions/LuckyTickets'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /SortTriangles:
    get:
      summary: Sort of triangles
      description: Is used to sort the triangles in descending order and present an outputdata as an array of triangles titles.
      parameters:
        - name: TrianglesBody
          in: query
          description: contain the info about every single triangle (its vertices and lenght of each one)
          required: true
          type: array
      tags:
        - Sorted triangles
      responses:
        200:
          description: Return the array of triangles names(vertices) in descending order
          schema:
            type: array
            items:
              $ref: '#/definitions/SortedTriangles'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
